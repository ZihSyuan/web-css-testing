{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["styles","app","display","flexDirection","bar","backgroundColor","width","height","note","center","flex","card","padding","content","alignItems","justifyContent","header","rightHeader","flexGrow","flexShrink","itemContainer","leftHeader","problemText","minWidth","maxWidth","problemA","subTitle","overflow","textOverflow","whiteSpace","App","style","className","itemText","Button","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+PAMMA,G,MAAS,CACbC,IAAK,CACHC,QAAS,OACTC,cAAe,OAEjBC,IAAK,CACHC,gBAAiB,SACjBC,MAAO,IACPC,OAAQ,SAEVC,KAAM,CACJH,gBAAiB,OACjBC,MAAO,IACPC,OAAQ,SAEVE,OAAQ,CACNF,OAAQ,QACRG,KAAM,GAERC,KAAM,CACJC,QAAS,GACTP,gBAAiB,QAEnBQ,QAAS,CACPR,gBAAiB,SACjBE,OAAQ,IACRL,QAAS,OACTY,WAAY,SACZC,eAAgB,UAElBC,OAAQ,CACNX,gBAAiB,YACjBE,OAAQ,GACRL,QAAS,OACTC,cAAe,OAEjBc,YAAa,CACXC,SAAU,EACVC,WAAY,EACZjB,QAAS,OACTC,cAAe,MACfW,WAAY,UAEdM,cAAe,CACblB,QAAS,QAEXmB,WAAY,CACVH,SAAU,EACVC,WAAY,EACZjB,QAAS,OACTC,cAAe,MACfW,WAAY,SACZT,gBAAiB,QAWnBiB,YAAa,CACXjB,gBAAiB,SACjBK,KAAM,EACNa,SAAU,EACVC,SAAU,OACVlB,MAAO,QAETmB,SAAU,CACRpB,gBAAiB,cAOnBqB,SAAU,CACRxB,QAAS,eACTI,MAAO,OACPqB,SAAU,SACVC,aAAc,WACdC,WAAY,SAmDDC,MA/Cf,WACE,OACE,sBAAKC,MAAO/B,EAAOC,IAAnB,UACE,qBAAK8B,MAAO/B,EAAOI,MACnB,qBAAK2B,MAAO/B,EAAOS,OAAnB,SACE,sBAAKsB,MAAO/B,EAAOW,KAAnB,UACE,sBAAKoB,MAAO/B,EAAOgB,OAAnB,UACE,sBAAKe,MAAO/B,EAAOqB,WAAnB,UACE,cAAC,IAAD,IACA,qBAAKU,MAAO/B,EAAOsB,YAAnB,SAEE,qBAAKS,MAAO/B,EAAOyB,SAAUO,UAAU,eAAvC,+LAUJ,sBAAKD,MAAO/B,EAAOiB,YAAnB,UACE,sBAAKc,MAAO/B,EAAOoB,cAAnB,UACE,cAAC,IAAD,IACA,qBAAKW,MAAO/B,EAAOiC,SAAnB,2BAEF,sBAAKF,MAAO/B,EAAOoB,cAAnB,UACE,cAAC,IAAD,IACA,qBAAKW,MAAO/B,EAAOiC,SAAnB,8BAEF,sBAAKF,MAAO/B,EAAOoB,cAAnB,UACE,cAAC,IAAD,IACA,qBAAKW,MAAO/B,EAAOiC,SAAnB,0BAEF,cAACC,EAAA,EAAD,yBAGJ,qBAAKH,MAAO/B,EAAOa,QAAnB,+BAKJ,qBAAKkB,MAAO/B,EAAOQ,WC3HV2B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.85b4991e.chunk.js","sourcesContent":["import PhoneIcon from '@material-ui/icons/Phone';\nimport MailIcon from '@material-ui/icons/Mail';\nimport LanguageIcon from '@material-ui/icons/Language';\nimport Button from '@material-ui/core/Button';\nimport './App.css';\n\nconst styles = {\n  app: {\n    display: 'flex',\n    flexDirection: 'row',\n  },\n  bar: {\n    backgroundColor: 'orange',\n    width: 120,\n    height: '100vh',\n  },\n  note: {\n    backgroundColor: 'aqua',\n    width: 120,\n    height: '100vh',\n  },\n  center: {\n    height: '100vh',\n    flex: 1,\n  },\n  card: {\n    padding: 20,\n    backgroundColor: 'gray',\n  },\n  content: {\n    backgroundColor: 'Orchid',\n    height: 120,\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  header: {\n    backgroundColor: 'AliceBlue',\n    height: 30,\n    display: 'flex',\n    flexDirection: 'row',\n  },\n  rightHeader: {\n    flexGrow: 0,\n    flexShrink: 0,\n    display: 'flex',\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n  itemContainer: {\n    display: 'flex',\n  },\n  leftHeader: {\n    flexGrow: 1,\n    flexShrink: 1,\n    display: 'flex',\n    flexDirection: 'row',\n    alignItems: 'center',\n    backgroundColor: 'pink',\n  },\n  // problemText: {\n  //   maxWidth: 120,\n  //   backgroundColor: 'yellow',\n  //   flex: 1,\n  //   textOverflow: 'ellipsis',\n  //   whiteSpace: 'nowrap',\n  //   backgroundColor: 'DodgerBlue',\n  //   alignItems: 'flex-start',\n  // },\n  problemText: {\n    backgroundColor: 'yellow',\n    flex: 1,\n    minWidth: 0,\n    maxWidth: '100%',\n    width: '100%',\n  },\n  problemA: {\n    backgroundColor: 'DodgerBlue',\n    // width: 30,\n    // display: 'inline-block',\n    // whiteSpace: 'pre',\n    // overflow: 'hidden',\n    // textOverflow: 'ellipsis',\n  },\n  subTitle: {\n    display: 'inline-block',\n    width: '100%',\n    overflow: 'hidden',\n    textOverflow: 'ellipsis',\n    whiteSpace: 'pre',\n  },\n};\n\nfunction App() {\n  return (\n    <div style={styles.app}>\n      <div style={styles.bar} />\n      <div style={styles.center}>\n        <div style={styles.card}>\n          <div style={styles.header}>\n            <div style={styles.leftHeader}>\n              <LanguageIcon />\n              <div style={styles.problemText}>\n                {/* Or min-width some actual value. Without this, the flex child containing the other text elements won’t narrow past the “implied width” of those text elements. */}\n                <div style={styles.problemA} className=\"problem-text\">\n                  Or min-width some actual value. Without this, the flex child containing the other text elements won’t narrow past the “implied width” of those text elements.\n                </div>\n                {/* <div style={styles.problemA}>\n                  <div style={styles.subTitle}>\n                    Or min-width some actual value. Without this, the flex child containing the other text elements won’t narrow past the “implied width” of those text elements.\n                  </div>\n                </div> */}\n              </div>\n            </div>\n            <div style={styles.rightHeader}>\n              <div style={styles.itemContainer}>\n                <PhoneIcon />\n                <div style={styles.itemText}>1112223331</div>\n              </div>\n              <div style={styles.itemContainer}>\n                <MailIcon />\n                <div style={styles.itemText}>mail@mail.com</div>\n              </div>\n              <div style={styles.itemContainer}>\n                <LanguageIcon />\n                <div style={styles.itemText}>question </div>\n              </div>\n              <Button>Edit</Button>\n            </div>\n          </div>\n          <div style={styles.content}>\n            Content here\n          </div>\n        </div>\n      </div>\n      <div style={styles.note} />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}